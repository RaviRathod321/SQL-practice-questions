1.Get employee details from "EmployeeDetail" table whose Salary greater than 600000
SELECT * from employeedetails
where salary > 60000;

2.Get employee details from "EmployeeDetail" table whose Salary less than 700000
SELECT * from employeedetails
WHERE salary < 700000;

3.Get employee details from "EmployeeDetail" table whose Salary between 500000 and 600000
SELECT *from employeedetails
where salary between 500000 and 600000;

4.Select second highest salary from "EmployeeDetail" table. 
select salary as second_highest_Salary from employeedetails
where salary < (SELECT max(salary) from employeedetails)
limit 1;

5.Write the query to get the department and department wise total(sum) salary from "EmployeeDetail" table.
SELECT department, sum(salary) as total_Sum
from employeedetails
group by department;

6.Write the query to get the department and department wise total(sum) salary, 
  display it in ascending order according to salary.
    
    SELECT department, sum(salary) as total_sum
    from employeedetails
    GROUP by department
    order by total_sum asc;

7.#Write the query to get the department and department wise total(sum) salary, display it in descending order according to salary.
SELECT department, sum(salary) as Total_sum
from employeedetails
group by department
order by total_sum desc;

8.#Write the query to get the department, total no. of departments, total(sum) salary with respect to department from "EmployeeDetail" table.
SELECT department, count(*) as  dept_count, sum(salary) as total_sum
from employeedetails
GROUP by department;

9.#Get department wise average salary from "EmployeeDetail" table order by salary ascending
SELECT department, avg(salary) as AVG_salary 
from employeedetails
GROUP by department
order by AVG_salary ASC; 

10.#Department wise maximum salary from "EmployeeDetail" table order by salary ascending.
SELECT department, MAX(salary) AS max_Salary
from employeedetails
group by department
order by max_Salary asc;

11.Get department wise minimum salary from "EmployeeDetail" table order by salary ascending
select department, min(salary) as min_Salary
from employeedetails
group by department
order by min_Salary asc;

12.#Write down the query to fetch Project name assign to more than one Employee
select projectname, count(*) as emp_no 
from projectdetail
group by ProjectName
having emp_no > 1;

13.Get employee name, project name order by firstname from "EmployeeDetail" and "ProjectDetail" for those employee which have assigned project already.

select first_name , projectName
from employeedetails a
inner join projectdetail b
on a.employeeID = b.ProjectDetailID
order by first_name;

14.Get employee name, project name order by firstname from "EmployeeDetail" and "ProjectDetail" for all employee even they have not assigned project.

select first_name, projectName
from employeedetails a
left outer join projectdetail b
on a.employeeID = b.ProjectDetailID;

15.#Get employee name, project name order by firstname from "EmployeeDetail" and "ProjectDetail" for all employee if project is not assigned then display "-No Project Assigned".

select first_name, projectname
from employeedetails a
left outer join projectdetail b
on a.employeeID = b.ProjectDetailID
order by first_name;

16.#Get all project name even they have not matching any employeeid, in left table, order by firstname from "EmployeeDetail" and "ProjectDetail".

select firstname, projectname 
from employeedetails a
left outer join projectdetail b
on a.employeeID = b.ProjectDetailID
order by firstname;

17. #Get complete record(employeename, project name) from both tables([EmployeeDetail],[ProjectDetail]), if no match found in any table then show NULL.
NOTE : sql doesn't support the FULL OUTER JOIN we have used the UNION

SELECT a.first_name as employee_name, b.projectname
from employeedetails a
left join projectdetail b
on a.employeeID = b.ProjectDetailID
union
SELECT a.first_name as employee_name, b.projectname
from employeedetails a
right join projectdetail b
on a.employeeID = b.ProjectDetailID
where a.employeeID is null;

18.#Write a query to find out the employeename who has not assigned any project, and display "-No Project Assigned"( tables :- [EmployeeDetail],[ProjectDetail]).

SELECT a.first_name AS EmployeeDetail, coalesce(b.projectName -'No project assigned') as prrojectDetail
from employeedetails a 
left outer join projectdetail b 
ON a.employeeID = b.ProjectDetailID
and b.ProjectDetailID is null;

19.
